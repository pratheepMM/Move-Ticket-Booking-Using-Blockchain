{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from 'react';\nimport TicketBooking from '../../build/contracts/TicketBooking.json';\nimport { web3 } from './web3';\nvar networkId, contract;\n\nvar getContract = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var netId, netData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(typeof web3.eth.net !== 'undefined')) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 3;\n            return web3.eth.net.getId();\n\n          case 3:\n            netId = _context.sent;\n            console.log(netId, TicketBooking.abi, TicketBooking.networks[netId].address); //contract = await new web3.eth.Contract(TicketBooking.abi,TicketBooking.networks[netId]);\n\n            _context.next = 18;\n            break;\n\n          case 7:\n            _context.next = 9;\n            return web3.version.getNetwork(function (err, id) {\n              if (err) {\n                console.log(err);\n              } else {\n                networkId = id;\n              }\n            });\n\n          case 9:\n            netData = TicketBooking.networks[networkId];\n            console.log('netdata', netData);\n\n            if (!netData) {\n              _context.next = 17;\n              break;\n            }\n\n            _context.next = 14;\n            return new web3.eth.Contract(TicketBooking.abi, netData.address);\n\n          case 14:\n            contract = _context.sent;\n            _context.next = 18;\n            break;\n\n          case 17:\n            window.alert(\"the contract is not deployed in this network\");\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getContract() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\ngetContract();\nexport { contract };","map":{"version":3,"sources":["/home/pratheep/main_dir/TicketBooking/client/components/contract.js"],"names":["React","TicketBooking","web3","networkId","contract","getContract","eth","net","getId","netId","console","log","abi","networks","address","version","getNetwork","err","id","netData","Contract","window","alert"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,SAAQC,IAAR,QAAmB,QAAnB;AAEA,IAAIC,SAAJ,EAAcC,QAAd;;AAEA,IAAMC,WAAW;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAChB,OAAOH,IAAI,CAACI,GAAL,CAASC,GAAhB,KAAwB,WADR;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAEEL,IAAI,CAACI,GAAL,CAASC,GAAT,CAAaC,KAAb,EAFF;;AAAA;AAEZC,YAAAA,KAFY;AAGlBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAkBR,aAAa,CAACW,GAAhC,EAAoCX,aAAa,CAACY,QAAd,CAAuBJ,KAAvB,EAA8BK,OAAlE,EAHkB,CAIlB;;AAJkB;AAAA;;AAAA;AAAA;AAAA,mBAOZZ,IAAI,CAACa,OAAL,CAAaC,UAAb,CAAwB,UAACC,GAAD,EAAKC,EAAL,EAAU;AACtC,kBAAGD,GAAH,EAAO;AACNP,gBAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACA,eAFD,MAGI;AACHd,gBAAAA,SAAS,GAAGe,EAAZ;AACA;AACD,aAPI,CAPY;;AAAA;AAeZC,YAAAA,OAfY,GAeFlB,aAAa,CAACY,QAAd,CAAuBV,SAAvB,CAfE;AAgBlBO,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBQ,OAAtB;;AAhBkB,iBAiBfA,OAjBe;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAkBA,IAAIjB,IAAI,CAACI,GAAL,CAASc,QAAb,CAAsBnB,aAAa,CAACW,GAApC,EAAwCO,OAAO,CAACL,OAAhD,CAlBA;;AAAA;AAkBjBV,YAAAA,QAlBiB;AAAA;AAAA;;AAAA;AAqBjBiB,YAAAA,MAAM,CAACC,KAAP,CAAa,8CAAb;;AArBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXjB,WAAW;AAAA;AAAA;AAAA,GAAjB;;AA4BAA,WAAW;AAEX,SAAQD,QAAR","sourcesContent":["import React from 'react';\nimport TicketBooking from '../../build/contracts/TicketBooking.json'\nimport {web3} from './web3'\n\nlet networkId,contract;\n\nconst getContract = async ()=>{\n\tif(typeof web3.eth.net !== 'undefined'){\n\t\tconst netId = await web3.eth.net.getId();\n\t\tconsole.log(netId,TicketBooking.abi,TicketBooking.networks[netId].address)\n\t\t//contract = await new web3.eth.Contract(TicketBooking.abi,TicketBooking.networks[netId]);\n\t}\n\telse{\n\t\tawait web3.version.getNetwork((err,id)=>{\n\t\t\t\tif(err){\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tnetworkId = id\n\t\t\t\t}\n\t\t\t})\n\t\tconst netData = TicketBooking.networks[networkId]\n\t\tconsole.log('netdata',netData)\n\t\tif(netData){\n\t\t\tcontract = await new web3.eth.Contract(TicketBooking.abi,netData.address);\n\t\t}\n\t\telse{\n\t\t\twindow.alert(\"the contract is not deployed in this network\");\n\t\t} \n\t\t\n\t}\n\n}\n\ngetContract()\n\nexport {contract}"]},"metadata":{},"sourceType":"module"}