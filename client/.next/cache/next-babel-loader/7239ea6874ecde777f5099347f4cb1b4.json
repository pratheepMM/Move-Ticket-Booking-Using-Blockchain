{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Header, Radio, Modal, Image, Icon, Input } from 'semantic-ui-react';\nimport Web3 from 'react';\n\nconst getContract = async () => {\n  const {\n    web3,\n    networkId\n  } = await getWeb3();\n  let contract;\n  const netData = TicketBooking.networks[networkId];\n\n  if (netData) {\n    contract = await new web3.eth.Contract(TicketBooking.abi, netData.address);\n  } else {\n    window.alert(\"please change your network selection\");\n  }\n\n  return contract;\n};\n\nconst getWeb3 = async () => {\n  let web3, networkId;\n\n  if (false && typeof window.ethereum !== 'undefined') {\n    web3 = new Web3(window.ethereum);\n    const connect = await window.ethereum.enable();\n    networkId = await window.ethereum.networkVersion;\n    console.log(\"111\");\n  } else if (false && typeof window.web3 !== 'undefined') {\n    web3 = new Web3(window.web3.currentProvider);\n    networkId = await web3.eth.net.getId();\n    console.log(\"2222\");\n  } else {\n    const provider = new Web3.providers.HttpProvider(\"https://rinkeby.infura.io/v3/0468426dce2148b480c61bc7c52be067\");\n    web3 = new Web3(provider);\n    networkId = await web3.eth.net.getId();\n    console.log(\"3333\");\n  }\n\n  return {\n    web3,\n    networkId\n  };\n};\n\nclass AddShow extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"close\", () => {\n      this.setState({\n        open: false\n      });\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      const {\n        web3\n      } = getWeb3();\n      const {\n        showAvailable,\n        seatsAvailable,\n        showName,\n        amount,\n        fromTime,\n        toTime,\n        date\n      } = this.state;\n      const contract = await getContract();\n      amount = await web3.utils.toWei(amount, ether);\n      adminAddr = await web3.utils.toChecksumAddress(this.props.adminAcc);\n      await contract.methods.addShow(showAvailable, showName, seatsAvailable, amount, fromTime, toTime, date).send({\n        from: adminAddr\n      });\n      window.alert(\"Transaction Completed\");\n    });\n\n    this.state = {\n      showAvailable: true,\n      seatsAvailable: 0,\n      showName: '',\n      amount: 0,\n      fromTime: '',\n      toTime: '',\n      date: '',\n      open: false\n    };\n  }\n\n  render() {\n    if (this.props.admin) {\n      return __jsx(\"div\", null, __jsx(Form, null, __jsx(Form.Group, {\n        unstackable: true,\n        widths: 2\n      }, __jsx(Form.Input, {\n        label: \"Show Name\",\n        placeholder: \"Show Name\",\n        value: this.state.showName,\n        onChange: event => this.setState({\n          showName: event.target.value\n        })\n      }), __jsx(Form.Input, {\n        type: \"number\",\n        label: \"Available Seats\",\n        placeholder: \"Available Seats\",\n        min: \"0\",\n        max: \"10000\",\n        value: this.state.seatsAvailable,\n        onChange: event => this.setState({\n          seatsAvailable: event.target.value\n        })\n      })), __jsx(Form.Group, {\n        unstackable: true,\n        widths: 2\n      }, __jsx(Form.Input, {\n        label: \"Amount\",\n        placeholder: \"Amount\",\n        value: this.state.amount,\n        onChange: event => this.setState({\n          amount: event.target.value\n        })\n      }), __jsx(Form.Input, {\n        type: \"date\",\n        label: \"Date\",\n        value: this.state.date,\n        onChange: event => this.setState({\n          date: event.target.value\n        })\n      })), __jsx(Form.Group, {\n        unstackable: true,\n        widths: 2\n      }, __jsx(Form.Input, {\n        type: \"time\",\n        label: \"From Time\",\n        value: this.state.fromTime,\n        onChange: event => this.setState({\n          fromTime: event.target.value\n        })\n      }), __jsx(Form.Input, {\n        type: \"time\",\n        label: \"To Time\",\n        value: this.state.toTime,\n        onChange: event => {\n          this.setState({\n            toTime: event.target.value\n          });\n          console.log(event.target.value);\n        }\n      })), __jsx(Form.Checkbox, {\n        label: \"Whether Show is Available for Booking\",\n        value: this.state.amount,\n        onChange: event => this.setState({\n          amount: event.target.value\n        })\n      }), __jsx(Modal, {\n        trigger: __jsx(Button, {\n          onClick: () => this.setState({\n            open: true\n          })\n        }, \"Submit\"),\n        centered: false,\n        open: this.state.open,\n        onClose: this.close\n      }, __jsx(Modal.Header, null, \"Are you sure to Add this show ?\"), __jsx(Modal.Content, {\n        image: true\n      }, __jsx(Image, {\n        wrapped: true,\n        size: \"medium\",\n        src: \"\"\n      }), __jsx(Modal.Description, null, __jsx(Header, null, \"Name : \", this.state.showName), __jsx(\"p\", null, \"Seats Available : \", this.state.seatsAvailable), __jsx(\"p\", null, \"Amount : \", this.state.amount), __jsx(\"p\", null, \"From : \", this.state.fromTime), __jsx(\"p\", null, \"To : \", this.state.toTime), __jsx(\"p\", null, \"Date : \", this.state.date))), __jsx(Modal.Actions, null, __jsx(Button, {\n        color: \"red\",\n        onClick: this.close\n      }, __jsx(Icon, {\n        name: \"remove\"\n      }), \"No\"), __jsx(Button, {\n        color: \"green\",\n        onClick: this.onSubmit\n      }, __jsx(Icon, {\n        name: \"checkmark\"\n      }), \"Yes\")))));\n    } else {\n      return __jsx(\"h1\", null, \"You are not allowed to access this page\");\n    }\n  }\n\n}\n\nexport default AddShow;","map":{"version":3,"sources":["/home/pratheep/main_dir/TicketBooking/client/components/admin-components/addShow.js"],"names":["React","Component","Form","Button","Header","Radio","Modal","Image","Icon","Input","Web3","getContract","web3","networkId","getWeb3","contract","netData","TicketBooking","networks","eth","Contract","abi","address","window","alert","ethereum","connect","enable","networkVersion","console","log","currentProvider","net","getId","provider","providers","HttpProvider","AddShow","constructor","props","setState","open","event","preventDefault","showAvailable","seatsAvailable","showName","amount","fromTime","toTime","date","state","utils","toWei","ether","adminAddr","toChecksumAddress","adminAcc","methods","addShow","send","from","render","admin","target","value","close","onSubmit"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Form,Button,Header,Radio,Modal,Image,Icon,Input} from 'semantic-ui-react';\nimport Web3 from 'react';\n\nconst getContract = async()=>{\n\n\tconst {web3,networkId} = await getWeb3();\n\tlet contract;\n\n\tconst netData = TicketBooking.networks[networkId]\n\n\tif(netData){\n\t\tcontract = await new web3.eth.Contract(TicketBooking.abi,netData.address);\n\t}\n\telse{\n\t\twindow.alert(\"please change your network selection\");\n\t\t}\n\treturn contract\n}\n\nconst getWeb3 = async()=>{\n\n\tlet web3,networkId;\n\n\tif(typeof window !== 'undefined' && typeof window.ethereum !== 'undefined'){\n\n\t\tweb3 = new Web3(window.ethereum);\n\t\tconst connect = await window.ethereum.enable();\n\t\tnetworkId = await window.ethereum.networkVersion\n\t\tconsole.log(\"111\");\n\t}\n\n\telse if(typeof window !== 'undefined' && typeof window.web3 !== 'undefined'){\n\n\t\tweb3 = new Web3(window.web3.currentProvider);\n\t\tnetworkId = await web3.eth.net.getId();\n\t\tconsole.log(\"2222\")\n\t}\n\n\telse{\n\n\t\tconst provider = new Web3.providers.HttpProvider(\"https://rinkeby.infura.io/v3/0468426dce2148b480c61bc7c52be067\");\n\t\tweb3 = new Web3(provider);\n\t\tnetworkId = await web3.eth.net.getId();\n\t\tconsole.log(\"3333\")\n\t}\n\treturn{web3,networkId};\n}\n\nclass AddShow extends Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshowAvailable : true,\n\t\t\tseatsAvailable : 0,\n\t\t\tshowName : '',\n\t\t\tamount : 0,\n\t\t\tfromTime : '',\n\t\t\ttoTime : '',\n\t\t\tdate : '',\n\t\t\topen : false\n\t\t}\n\t}\n\n\tclose = ()=>{\n\n\t\tthis.setState({open : false})\n\t}\n\n\tonSubmit = async(event)=>{\n\t\tevent.preventDefault();\n\t\tconst {web3} = getWeb3();\n\t\tconst {showAvailable,seatsAvailable,showName,amount,fromTime,toTime,date} = this.state;\n\t\tconst contract = await getContract();\n\t\tamount = await web3.utils.toWei(amount,ether);\n\t\tadminAddr = await web3.utils.toChecksumAddress(this.props.adminAcc);\n\t\tawait contract.methods.addShow(showAvailable,showName,seatsAvailable,amount,fromTime,toTime,date).send({from : adminAddr})\n\t\twindow.alert(\"Transaction Completed\");\n\t}\n\n\n\trender(){\n\n\t\tif(this.props.admin){\n\t\t\treturn(\n\t\t\t\t<div>\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<Form.Group unstackable widths={2}>\n\t\t\t\t\t\t\t<Form.Input label='Show Name' placeholder='Show Name'\n\t\t\t\t\t\t\t\tvalue={this.state.showName}\n\t\t\t\t\t\t\t \tonChange={(event)=>this.setState({showName : event.target.value})}\n\t\t\t\t\t\t\t />\n\t\t\t\t\t\t\t<Form.Input type='number' label='Available Seats' placeholder='Available Seats' min='0' max='10000'\n\t\t\t\t\t\t\t\tvalue={this.state.seatsAvailable}\n\t\t\t\t\t\t\t \tonChange={(event)=>this.setState({seatsAvailable : event.target.value})}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group unstackable widths={2}>\n\t\t\t\t\t\t\t<Form.Input label='Amount' placeholder='Amount'\n\t\t\t\t\t\t\t\tvalue={this.state.amount}\n\t\t\t\t\t\t\t \tonChange={(event)=>this.setState({amount : event.target.value})}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Input type='date' label='Date'\n\t\t\t\t\t\t\t\tvalue={this.state.date}\n\t\t\t\t\t\t\t \tonChange={(event)=>this.setState({date : event.target.value})}\n\t\t\t\t\t\t\t />\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group unstackable widths={2}>\n\t\t\t\t\t\t\t<Form.Input type='time' label='From Time' \n\t\t\t\t\t\t\t\tvalue={this.state.fromTime}\n\t\t\t\t\t\t\t \tonChange={(event)=>this.setState({fromTime : event.target.value})}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Input type='time' label='To Time' \n\t\t\t\t\t\t\t\tvalue={this.state.toTime}\n\t\t\t\t\t\t\t \tonChange={(event)=>{\n\t\t\t\t\t\t\t \t\tthis.setState({toTime : event.target.value})\n\t\t\t\t\t\t\t \t\tconsole.log(event.target.value)\n\t\t\t\t\t\t\t \t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Checkbox label='Whether Show is Available for Booking' \n\t\t\t\t\t\t\tvalue={this.state.amount}\n\t\t\t\t\t\t \tonChange={(event)=>this.setState({amount : event.target.value})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Modal trigger={<Button onClick={()=>this.setState({open : true})}>Submit</Button>} centered={false} open={this.state.open} onClose={this.close}>\n\t\t\t\t\t\t<Modal.Header>Are you sure to Add this show ?</Modal.Header>\n\t\t\t\t\t\t<Modal.Content image>\n\t\t\t\t\t\t\t<Image wrapped size='medium' src=''/>\n\t\t\t\t\t\t\t<Modal.Description>\n\t\t\t\t\t\t\t\t<Header>Name : {this.state.showName}</Header>\n\t\t\t\t\t\t\t\t<p>Seats Available : {this.state.seatsAvailable}</p>\n\t\t\t\t\t\t\t\t<p>Amount : {this.state.amount}</p>\n\t\t\t\t\t\t\t\t<p>From : {this.state.fromTime}</p>\n\t\t\t\t\t\t\t\t<p>To : {this.state.toTime}</p>\n\t\t\t\t\t\t\t\t<p>Date : {this.state.date}</p>\n\t\t\t\t\t\t\t</Modal.Description>\n\t\t\t\t\t\t</Modal.Content>\n\t\t\t\t\t\t<Modal.Actions>\n\t\t\t\t\t\t\t<Button color='red' onClick={this.close}><Icon name='remove'/>No</Button>\n\t\t\t\t\t\t\t<Button color='green' onClick={this.onSubmit}><Icon name='checkmark'/>Yes</Button>\n\t\t\t\t\t\t</Modal.Actions>\n\t\t\t\t\t\t</Modal>\t\n\t\t\t\t\t</Form>\n\t\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\telse{\n\t\t\treturn(\n\t\t\t\t<h1>You are not allowed to access this page</h1>\n\t\t\t)\n\t\t}\n\t}\n}\n\nexport default AddShow;"]},"metadata":{},"sourceType":"module"}