{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Radio } from 'semantic-ui-react';\n\nvar AddShow = /*#__PURE__*/function (_Component) {\n  _inherits(AddShow, _Component);\n\n  var _super = _createSuper(AddShow);\n\n  function AddShow(props) {\n    var _this;\n\n    _classCallCheck(this, AddShow);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      showAvailable: true,\n      showName: '',\n      amount: 0,\n      fromTime: '',\n      toTime: '',\n      date: ''\n    };\n    return _this;\n  }\n\n  _createClass(AddShow, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.props.admin) {\n        return __jsx(Form, null, __jsx(Form.Group, {\n          unstackable: true,\n          widths: 2\n        }, __jsx(Form.Input, {\n          label: \"Show Name\",\n          placeholder: \"Show Name\"\n        }), __jsx(Form.Input, {\n          type: \"number\",\n          label: \"Available Seats\",\n          placeholder: \"Available Seats\"\n        })), __jsx(Form.Group, {\n          unstackable: true,\n          widths: 2\n        }, __jsx(Form.Input, {\n          label: \"Amount\",\n          placeholder: \"Amount\"\n        }), __jsx(Form.Input, {\n          type: \"date\",\n          label: \"Date\",\n          placeholder: \"Date\"\n        })), __jsx(Form.Group, null, __jsx(Form.Input, {\n          type: \"time\",\n          label: \"From Time\",\n          placeholder: \"From Time\"\n        }), __jsx(Form.Input, {\n          type: \"time\",\n          label: \"To Time\",\n          placeholder: \"To Time\"\n        })), __jsx(Radio, {\n          slider: true,\n          checked: this.state.showAvailable,\n          onClick: function onClick() {\n            _this2.setState({\n              seatAvailable: !seatAvailable\n            });\n          }\n        }), __jsx(Button, {\n          submit: true\n        }, \"Submit\"));\n      } else {\n        return __jsx(\"h1\", null, \"You are not allowed to access this page\");\n      }\n    }\n  }]);\n\n  return AddShow;\n}(Component);\n\nexport default AddShow;","map":{"version":3,"sources":["/home/pratheep/main_dir/TicketBooking/client/components/admin-components/addShow.js"],"names":["React","Component","Form","Button","Radio","AddShow","props","state","showAvailable","showName","amount","fromTime","toTime","date","admin","setState","seatAvailable"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,IAAR,EAAaC,MAAb,EAAoBC,KAApB,QAAgC,mBAAhC;;IAEMC,O;;;;;AAEL,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,aAAa,EAAG,IADJ;AAEZC,MAAAA,QAAQ,EAAG,EAFC;AAGZC,MAAAA,MAAM,EAAG,CAHG;AAIZC,MAAAA,QAAQ,EAAG,EAJC;AAKZC,MAAAA,MAAM,EAAG,EALG;AAMZC,MAAAA,IAAI,EAAG;AANK,KAAb;AAFiB;AAUjB;;;;6BAEO;AAAA;;AAEP,UAAG,KAAKP,KAAL,CAAWQ,KAAd,EAAoB;AACnB,eACC,MAAC,IAAD,QACC,MAAC,IAAD,CAAM,KAAN;AAAY,UAAA,WAAW,MAAvB;AAAwB,UAAA,MAAM,EAAE;AAAhC,WACC,MAAC,IAAD,CAAM,KAAN;AAAY,UAAA,KAAK,EAAC,WAAlB;AAA8B,UAAA,WAAW,EAAC;AAA1C,UADD,EAEC,MAAC,IAAD,CAAM,KAAN;AAAY,UAAA,IAAI,EAAC,QAAjB;AAA0B,UAAA,KAAK,EAAC,iBAAhC;AAAkD,UAAA,WAAW,EAAC;AAA9D,UAFD,CADD,EAKC,MAAC,IAAD,CAAM,KAAN;AAAY,UAAA,WAAW,MAAvB;AAAwB,UAAA,MAAM,EAAE;AAAhC,WACC,MAAC,IAAD,CAAM,KAAN;AAAY,UAAA,KAAK,EAAC,QAAlB;AAA2B,UAAA,WAAW,EAAE;AAAxC,UADD,EAEC,MAAC,IAAD,CAAM,KAAN;AAAY,UAAA,IAAI,EAAC,MAAjB;AAAwB,UAAA,KAAK,EAAC,MAA9B;AAAqC,UAAA,WAAW,EAAC;AAAjD,UAFD,CALD,EASC,MAAC,IAAD,CAAM,KAAN,QACC,MAAC,IAAD,CAAM,KAAN;AAAY,UAAA,IAAI,EAAC,MAAjB;AAAwB,UAAA,KAAK,EAAC,WAA9B;AAA0C,UAAA,WAAW,EAAC;AAAtD,UADD,EAEC,MAAC,IAAD,CAAM,KAAN;AAAY,UAAA,IAAI,EAAC,MAAjB;AAAwB,UAAA,KAAK,EAAC,SAA9B;AAAwC,UAAA,WAAW,EAAC;AAApD,UAFD,CATD,EAaC,MAAC,KAAD;AAAO,UAAA,MAAM,MAAb;AACC,UAAA,OAAO,EAAE,KAAKP,KAAL,CAAWC,aADrB;AAEC,UAAA,OAAO,EAAE,mBAAI;AAAC,YAAA,MAAI,CAACO,QAAL,CAAc;AAACC,cAAAA,aAAa,EAAG,CAACA;AAAlB,aAAd;AAAgD;AAF/D,UAbD,EAiBC,MAAC,MAAD;AAAQ,UAAA,MAAM;AAAd,oBAjBD,CADD;AAqBA,OAtBD,MAuBI;AACH,eACC,4DADD;AAGA;AACD;;;;EA5CoBf,S;;AA+CtB,eAAeI,OAAf","sourcesContent":["import React,{Component} from 'react';\nimport {Form,Button,Radio} from 'semantic-ui-react';\n\nclass AddShow extends Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshowAvailable : true,\n\t\t\tshowName : '',\n\t\t\tamount : 0,\n\t\t\tfromTime : '',\n\t\t\ttoTime : '',\n\t\t\tdate : ''\n\t\t}\n\t}\n\n\trender(){\n\n\t\tif(this.props.admin){\n\t\t\treturn(\n\t\t\t\t<Form>\n\t\t\t\t\t<Form.Group unstackable widths={2}>\n\t\t\t\t\t\t<Form.Input label='Show Name' placeholder='Show Name'/>\n\t\t\t\t\t\t<Form.Input type='number' label='Available Seats' placeholder='Available Seats'/>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group unstackable widths={2}>\n\t\t\t\t\t\t<Form.Input label='Amount' placeholder ='Amount'/>\n\t\t\t\t\t\t<Form.Input type='date' label='Date' placeholder='Date'/>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Input type='time' label='From Time' placeholder='From Time'/>\n\t\t\t\t\t\t<Form.Input type='time' label='To Time' placeholder='To Time'/>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Radio slider \n\t\t\t\t\t\tchecked={this.state.showAvailable}\n\t\t\t\t\t\tonClick={()=>{this.setState({seatAvailable : !seatAvailable})}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button submit>Submit</Button>\n\t\t\t\t</Form>\n\t\t\t)\n\t\t}\n\t\telse{\n\t\t\treturn(\n\t\t\t\t<h1>You are not allowed to access this page</h1>\n\t\t\t)\n\t\t}\n\t}\n}\n\nexport default AddShow;"]},"metadata":{},"sourceType":"module"}