{"ast":null,"code":"import React from 'react';\nimport TicketBooking from '../../build/contracts/TicketBooking.json';\nimport { web3 } from './web3';\nlet networkId, contract;\n\nconst getContract = async () => {\n  if (typeof web3.version !== 'undefined') {\n    /* await web3.version.getNetwork((err,id)=>{\n    \tif(err){\n    \t\tconsole.log(err)\n    \t}\n    \telse{\n    \t\tnetworkId = id\n    \t}\n    })\n    const netData = TicketBooking.networks[networkId]\n    if(netData){\n    contract = await new web3.eth.Contract(TicketBooking.abi,netData.address);\n    }\n    else{\n    window.alert(\"the contract is not deployed in this network\");\n    } */\n  } else {\n    const netid = await web3.eth.net.getId();\n    contract = await new web3.eth.Contract(TicketBooking.abi, netid.address);\n  }\n};\n\ngetContract();\nexport { contract };","map":{"version":3,"sources":["/home/pratheep/main_dir/TicketBooking/client/components/contract.js"],"names":["React","TicketBooking","web3","networkId","contract","getContract","version","netid","eth","net","getId","Contract","abi","address"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,SAAQC,IAAR,QAAmB,QAAnB;AAEA,IAAIC,SAAJ,EAAcC,QAAd;;AAEA,MAAMC,WAAW,GAAG,YAAU;AAC7B,MAAG,OAAOH,IAAI,CAACI,OAAZ,KAAwB,WAA3B,EAAuC;AACrC;;;;;;;;;;;;;;;AAeD,GAhBD,MAiBI;AACH,UAAMC,KAAK,GAAG,MAAML,IAAI,CAACM,GAAL,CAASC,GAAT,CAAaC,KAAb,EAApB;AACAN,IAAAA,QAAQ,GAAG,MAAM,IAAIF,IAAI,CAACM,GAAL,CAASG,QAAb,CAAsBV,aAAa,CAACW,GAApC,EAAwCL,KAAK,CAACM,OAA9C,CAAjB;AACA;AAED,CAvBD;;AAyBAR,WAAW;AAEX,SAAQD,QAAR","sourcesContent":["import React from 'react';\nimport TicketBooking from '../../build/contracts/TicketBooking.json'\nimport {web3} from './web3'\n\nlet networkId,contract;\n\nconst getContract = async ()=>{\n\tif(typeof web3.version !== 'undefined'){\n\t\t /* await web3.version.getNetwork((err,id)=>{\n\t\t\t\tif(err){\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tnetworkId = id\n\t\t\t\t}\n\t\t\t})\n\t\tconst netData = TicketBooking.networks[networkId]\n\t\tif(netData){\n\t\t\tcontract = await new web3.eth.Contract(TicketBooking.abi,netData.address);\n\t\t}\n\t\telse{\n\t\t\twindow.alert(\"the contract is not deployed in this network\");\n\t\t} */ \n\t}\n\telse{\n\t\tconst netid = await web3.eth.net.getId()\n\t\tcontract = await new web3.eth.Contract(TicketBooking.abi,netid.address);\n\t}\n\n}\n\ngetContract()\n\nexport {contract}"]},"metadata":{},"sourceType":"module"}