{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from 'react';\nimport TicketBooking from '../../build/contracts/TicketBooking.json';\nimport { web3 } from './web3';\nvar networkId, contract;\n\nvar getContract = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            /* await web3.version.getNetwork((err,id)=>{\n            \t\tif(err){\n            \t\t\tconsole.log(err)\n            \t\t}\n            \t\telse{\n            \t\t\tnetworkId = id\n            \t\t}\n            \t})\n            const netData = TicketBooking.networks[networkId]\n            if(netData){\n            \tcontract = await await new web3.eth.Contract(TicketBooking.abi,netData.address);\n            }\n            else{\n            \twindow.alert(\"the contract is not deployed in this network\");\n            } */\n            console.log(web3);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getContract() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\ngetContract();\nexport { contract };","map":{"version":3,"sources":["/home/pratheep/main_dir/TicketBooking/client/components/contract.js"],"names":["React","TicketBooking","web3","networkId","contract","getContract","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,SAAQC,IAAR,QAAmB,QAAnB;AAEA,IAAIC,SAAJ,EAAcC,QAAd;;AAEA,IAAMC,WAAW;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AACnB;;;;;;;;;;;;;;;AAgBAC,YAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AAjBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXG,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAoBAA,WAAW;AAEX,SAAQD,QAAR","sourcesContent":["import React from 'react';\nimport TicketBooking from '../../build/contracts/TicketBooking.json'\nimport {web3} from './web3'\n\nlet networkId,contract;\n\nconst getContract = async ()=>{\n\t/* await web3.version.getNetwork((err,id)=>{\n\t\t\tif(err){\n\t\t\t\tconsole.log(err)\n\t\t\t}\n\t\t\telse{\n\t\t\t\tnetworkId = id\n\t\t\t}\n\t\t})\n\tconst netData = TicketBooking.networks[networkId]\n\tif(netData){\n\t\tcontract = await await new web3.eth.Contract(TicketBooking.abi,netData.address);\n\t}\n\telse{\n\t\twindow.alert(\"the contract is not deployed in this network\");\n\t} */\n\n\tconsole.log(web3)\n}\n\ngetContract()\n\nexport {contract}"]},"metadata":{},"sourceType":"module"}