{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Button, Icon, Grid, Confirm } from 'semantic-ui-react';\n\nclass GetSeat extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"openConfirm\", event => {\n      console.log(event);\n      event.preventDefault();\n\n      if (Color == 'grey') {\n        //this.setState({open : true})\n        console.log('grey', idS);\n      } else {\n        window.alert(\"Seat have been booked already !\");\n      }\n    });\n\n    _defineProperty(this, \"ticket\", () => {\n      var res = [];\n\n      for (let i = 1; i <= this.props.show.seatsAvailable; i++) {\n        let Color = this.props.seats.includes(i) ? 'red' : 'grey';\n        res.push(__jsx(Button, {\n          size: \"tiny\",\n          onClick: this.openConfirm,\n          circular: true,\n          key: i,\n          color: Color\n        }, __jsx(Icon, {\n          name: \"ticket\"\n        }), i));\n      }\n\n      return res;\n    });\n\n    this.state = {\n      open: false,\n      id: null\n    };\n  }\n\n  render() {\n    return __jsx(Grid.Row, null, __jsx(Grid.Column, null, this.ticket(), __jsx(Confirm, {\n      open: this.state.open,\n      onCancel: () => this.setState({\n        open: false\n      }),\n      onConfirm: () => this.props.buyTicket(this.props.showId, this.state.id)\n    })));\n  }\n\n}\n\nexport default GetSeat;","map":{"version":3,"sources":["/home/pratheep/main_dir/TicketBooking/client/components/getSeat.js"],"names":["React","Component","Button","Icon","Grid","Confirm","GetSeat","constructor","props","event","console","log","preventDefault","Color","idS","window","alert","res","i","show","seatsAvailable","seats","includes","push","openConfirm","state","open","id","render","ticket","setState","buyTicket","showId"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,MAAR,EAAeC,IAAf,EAAoBC,IAApB,EAAyBC,OAAzB,QAAuC,mBAAvC;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAA+B;AAE9BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;;AADiB,yCAQHC,KAAD,IAAS;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAA,MAAAA,KAAK,CAACG,cAAN;;AACA,UAAGC,KAAK,IAAE,MAAV,EAAiB;AAChB;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBG,GAAnB;AACA,OAHD,MAII;AACHC,QAAAA,MAAM,CAACC,KAAP,CAAa,iCAAb;AACA;AACD,KAlBiB;;AAAA,oCAoBT,MAAI;AACZ,UAAIC,GAAG,GAAC,EAAR;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,IAAE,KAAKV,KAAL,CAAWW,IAAX,CAAgBC,cAA/B,EAA8CF,CAAC,EAA/C,EAAkD;AACjD,YAAIL,KAAK,GAAG,KAAKL,KAAL,CAAWa,KAAX,CAAiBC,QAAjB,CAA0BJ,CAA1B,IAA6B,KAA7B,GAAmC,MAA/C;AACCD,QAAAA,GAAG,CAACM,IAAJ,CACC,MAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,MAAb;AAAoB,UAAA,OAAO,EAAE,KAAKC,WAAlC;AAA+C,UAAA,QAAQ,MAAvD;AAAwD,UAAA,GAAG,EAAEN,CAA7D;AAAgE,UAAA,KAAK,EAAEL;AAAvE,WACA,MAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX,UADA,EAECK,CAFD,CADD;AAMD;;AACD,aAAOD,GAAP;AACA,KAhCiB;;AAEjB,SAAKQ,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAG,KADK;AAEZC,MAAAA,EAAE,EAAG;AAFO,KAAb;AAIA;;AA4BDC,EAAAA,MAAM,GAAE;AACP,WACA,MAAC,IAAD,CAAM,GAAN,QACC,MAAC,IAAD,CAAM,MAAN,QACE,KAAKC,MAAL,EADF,EAEC,MAAC,OAAD;AAAS,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWC,IAA1B;AACC,MAAA,QAAQ,EAAE,MAAI,KAAKI,QAAL,CAAc;AAACJ,QAAAA,IAAI,EAAC;AAAN,OAAd,CADf;AAEC,MAAA,SAAS,EAAE,MAAI,KAAKlB,KAAL,CAAWuB,SAAX,CAAqB,KAAKvB,KAAL,CAAWwB,MAAhC,EAAuC,KAAKP,KAAL,CAAWE,EAAlD;AAFhB,MAFD,CADD,CADA;AAWA;;AAhD6B;;AAmD/B,eAAerB,OAAf","sourcesContent":["import React,{Component} from 'react';\nimport {Button,Icon,Grid,Confirm} from 'semantic-ui-react'\n\nclass GetSeat extends Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\topen : false,\n\t\t\tid : null\n\t\t}\n\t}\n\n\topenConfirm = (event)=>{\n\t\tconsole.log(event)\n\t\tevent.preventDefault()\n\t\tif(Color=='grey'){\n\t\t\t//this.setState({open : true})\n\t\t\tconsole.log('grey',idS)\n\t\t}\n\t\telse{\n\t\t\twindow.alert(\"Seat have been booked already !\")\n\t\t}\n\t}\n\n\tticket = ()=>{\n\t\tvar res=[]\n\t\tfor(let i=1;i<=this.props.show.seatsAvailable;i++){\n\t\t\tlet Color = this.props.seats.includes(i)?'red':'grey'\n\t \t\tres.push(\n\t\t\t\t\t<Button size='tiny' onClick={this.openConfirm} circular key={i} color={Color}>\n\t\t\t\t\t<Icon name='ticket'/>\n\t\t\t\t\t{i}\n\t\t\t\t\t</Button>\n\t\t\t)\n\t\t}\n\t\treturn res;\n\t}\n\n\trender(){\n\t\treturn(\n\t\t<Grid.Row>\n\t\t\t<Grid.Column>\n\t\t\t\t{this.ticket()}\n\t\t\t\t<Confirm open={this.state.open}\n\t\t\t\t onCancel={()=>this.setState({open:false})}\n\t\t\t\t onConfirm={()=>this.props.buyTicket(this.props.showId,this.state.id)}\n\t\t\t\t/>\n\t\t\t</Grid.Column>\n\t\t</Grid.Row>\n\t\t)\n\t}\n}\n\nexport default GetSeat;"]},"metadata":{},"sourceType":"module"}