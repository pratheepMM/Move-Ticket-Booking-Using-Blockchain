{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from 'react';\nimport TicketBooking from '../../build/contracts/TicketBooking.json';\nimport web3 from './web3';\nvar networkId, ticketBooking;\n\nvar getContract = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var netId, showCount, netData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(typeof web3.eth.net !== 'undefined')) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 3;\n            return web3.eth.net.getId();\n\n          case 3:\n            netId = _context.sent;\n            _context.next = 6;\n            return new web3.eth.Contract(TicketBooking.abi, TicketBooking.networks[netId].address);\n\n          case 6:\n            ticketBooking = _context.sent;\n            _context.next = 9;\n            return ticketBooking;\n\n          case 9:\n            showCount = _context.sent;\n            console.log(\"first\", showCount);\n            _context.next = 25;\n            break;\n\n          case 13:\n            console.log(\"second\");\n            _context.next = 16;\n            return web3.version.getNetwork(function (err, id) {\n              if (err) {\n                console.log(err);\n              } else {\n                networkId = id;\n              }\n            });\n\n          case 16:\n            netData = TicketBooking.networks[networkId];\n            console.log('netdata', netData);\n\n            if (!netData) {\n              _context.next = 24;\n              break;\n            }\n\n            _context.next = 21;\n            return new web3.eth.Contract(TicketBooking.abi, netData.address);\n\n          case 21:\n            ticketBooking = _context.sent;\n            _context.next = 25;\n            break;\n\n          case 24:\n            window.alert(\"the contract is not deployed in this network\");\n\n          case 25:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getContract() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\ngetContract();\nexport default ticketBooking;","map":{"version":3,"sources":["/home/pratheep/main_dir/TicketBooking/client/components/contract.js"],"names":["React","TicketBooking","web3","networkId","ticketBooking","getContract","eth","net","getId","netId","Contract","abi","networks","address","showCount","console","log","version","getNetwork","err","id","netData","window","alert"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAIC,SAAJ,EAAcC,aAAd;;AAEA,IAAMC,WAAW;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAChB,OAAOH,IAAI,CAACI,GAAL,CAASC,GAAhB,KAAwB,WADR;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAEEL,IAAI,CAACI,GAAL,CAASC,GAAT,CAAaC,KAAb,EAFF;;AAAA;AAEZC,YAAAA,KAFY;AAAA;AAAA,mBAGI,IAAIP,IAAI,CAACI,GAAL,CAASI,QAAb,CAAsBT,aAAa,CAACU,GAApC,EAAwCV,aAAa,CAACW,QAAd,CAAuBH,KAAvB,EAA8BI,OAAtE,CAHJ;;AAAA;AAGlBT,YAAAA,aAHkB;AAAA;AAAA,mBAIMA,aAJN;;AAAA;AAIZU,YAAAA,SAJY;AAKlBC,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,SAApB;AALkB;AAAA;;AAAA;AAQlBC,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AARkB;AAAA,mBASZd,IAAI,CAACe,OAAL,CAAaC,UAAb,CAAwB,UAACC,GAAD,EAAKC,EAAL,EAAU;AACtC,kBAAGD,GAAH,EAAO;AACNJ,gBAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACA,eAFD,MAGI;AACHhB,gBAAAA,SAAS,GAAGiB,EAAZ;AACA;AACD,aAPI,CATY;;AAAA;AAiBZC,YAAAA,OAjBY,GAiBFpB,aAAa,CAACW,QAAd,CAAuBT,SAAvB,CAjBE;AAkBlBY,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBK,OAAtB;;AAlBkB,iBAmBfA,OAnBe;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAoBK,IAAInB,IAAI,CAACI,GAAL,CAASI,QAAb,CAAsBT,aAAa,CAACU,GAApC,EAAwCU,OAAO,CAACR,OAAhD,CApBL;;AAAA;AAoBjBT,YAAAA,aApBiB;AAAA;AAAA;;AAAA;AAuBjBkB,YAAAA,MAAM,CAACC,KAAP,CAAa,8CAAb;;AAvBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXlB,WAAW;AAAA;AAAA;AAAA,GAAjB;;AA8BAA,WAAW;AAEX,eAAeD,aAAf","sourcesContent":["import React from 'react';\nimport TicketBooking from '../../build/contracts/TicketBooking.json'\nimport web3 from './web3'\n\nlet networkId,ticketBooking;\n\nconst getContract = async ()=>{\n\tif(typeof web3.eth.net !== 'undefined'){\n\t\tconst netId = await web3.eth.net.getId();\n\t\tticketBooking = await new web3.eth.Contract(TicketBooking.abi,TicketBooking.networks[netId].address);\n\t\tconst showCount = await ticketBooking\n\t\tconsole.log(\"first\",showCount)\n\t}\n\telse{\n\t\tconsole.log(\"second\")\n\t\tawait web3.version.getNetwork((err,id)=>{\n\t\t\t\tif(err){\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tnetworkId = id\n\t\t\t\t}\n\t\t\t})\n\t\tconst netData = TicketBooking.networks[networkId]\n\t\tconsole.log('netdata',netData)\n\t\tif(netData){\n\t\t\tticketBooking = await new web3.eth.Contract(TicketBooking.abi,netData.address);\n\t\t}\n\t\telse{\n\t\t\twindow.alert(\"the contract is not deployed in this network\");\n\t\t} \n\t\t\n\t}\n\n}\n\ngetContract()\n\nexport default ticketBooking;"]},"metadata":{},"sourceType":"module"}