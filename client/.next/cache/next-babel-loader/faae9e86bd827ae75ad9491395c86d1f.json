{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport TicketBooking from '../../build/contracts/TicketBooking.json';\nimport { Icon, Button } from 'semantic-ui-react';\nimport Layout from '../components/layout';\nimport GetSeat from '../components/getShow';\n\nconst getContract = async () => {\n  const {\n    web3,\n    networkId\n  } = await getWeb3();\n  let contract;\n  const netData = TicketBooking.networks[networkId];\n\n  if (netData) {\n    contract = await new web3.eth.Contract(TicketBooking.abi, netData.address);\n  } else {\n    window.alert(\"please change your network selection\");\n  }\n\n  return contract;\n};\n\nconst getWeb3 = async () => {\n  let web3, networkId;\n\n  if (false && typeof window.ethereum !== 'undefined') {\n    web3 = new Web3(window.ethereum);\n    const connect = await window.ethereum.enable();\n    networkId = await window.ethereum.networkVersion;\n    console.log(\"111\");\n  } else if (false && typeof window.web3 !== 'undefined') {\n    web3 = new Web3(window.web3.currentProvider);\n    networkId = await web3.eth.net.getId();\n    console.log(\"2222\");\n  } else {\n    const provider = new Web3.providers.HttpProvider(\"https://rinkeby.infura.io/v3/0468426dce2148b480c61bc7c52be067\");\n    web3 = new Web3(provider);\n    networkId = await web3.eth.net.getId();\n    console.log(\"3333\");\n  }\n\n  return {\n    web3,\n    networkId\n  };\n};\n\nconst getBookedSeat = async id => {\n  const contract = await getContract();\n  const name = await contract.methods.name().call();\n  const showCount = await contract.methods.getShowCount().call();\n  let show;\n  let seats = [];\n  console.log(showCount);\n\n  if (id < showCount && id >= 0) {\n    show = await contract.methods.showDetail(id).call();\n    console.log(show);\n    seats = await contract.methods.getBookedSeats(id).call();\n  }\n\n  return {\n    seats,\n    show,\n    name\n  };\n};\n\nclass ViewShow extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getAccount\", async () => {\n      let address;\n\n      if (\"undefined\" && typeof window.ethereum) {\n        await window.ethereum.enable();\n        address = await ethereum.selectedAddress;\n\n        if (address) {\n          this.setState({\n            account: true\n          });\n        }\n\n        console.log(\"acc 1\", address);\n      } else if (typeof window.web3.eth) {\n        window.web3.eth.getAccounts((err, acc) => {\n          if (err) {\n            console.log(err);\n          } else {\n            if (acc.length >= 1) this.setState({\n              account: true\n            });\n            console.log(this.state.account, acc);\n            address = acc;\n            console.log(\"acc 1\");\n          }\n        });\n      }\n\n      if (address) {\n        const {\n          web3\n        } = await getWeb3();\n        if (this.props.admin === web3.utils.toChecksumAddress(address)) this.setState({\n          admin: true\n        });\n      }\n    });\n\n    this.state = {\n      account: false,\n      admin: false\n    };\n  }\n\n  static async getInitialProps(query) {\n    const id = query.query.id;\n    console.log(\"static\");\n    const {\n      seats,\n      name,\n      show\n    } = await getBookedSeat(id);\n    return {\n      id,\n      seats,\n      show,\n      name\n    };\n  }\n\n  async componentDidMount() {\n    console.log('components');\n    this.getAccount();\n  }\n\n  render() {\n    return __jsx(Layout, {\n      name: this.props.name,\n      account: this.state.account,\n      id: 'Logged in'\n    }, __jsx(GetSeat, null));\n  }\n\n}\n\nexport default ViewShow;","map":{"version":3,"sources":["/home/pratheep/main_dir/TicketBooking/client/pages/viewShow.js"],"names":["React","Component","Web3","TicketBooking","Icon","Button","Layout","GetSeat","getContract","web3","networkId","getWeb3","contract","netData","networks","eth","Contract","abi","address","window","alert","ethereum","connect","enable","networkVersion","console","log","currentProvider","net","getId","provider","providers","HttpProvider","getBookedSeat","id","name","methods","call","showCount","getShowCount","show","seats","showDetail","getBookedSeats","ViewShow","constructor","props","selectedAddress","setState","account","getAccounts","err","acc","length","state","admin","utils","toChecksumAddress","getInitialProps","query","componentDidMount","getAccount","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport Web3 from 'web3';\nimport TicketBooking from '../../build/contracts/TicketBooking.json'\nimport {Icon,Button} from 'semantic-ui-react'\nimport Layout from '../components/layout'\nimport GetSeat from '../components/getShow'\n\n\nconst getContract = async()=>{\n\n\tconst {web3,networkId} = await getWeb3();\n\tlet contract;\n\n\tconst netData = TicketBooking.networks[networkId]\n\n\tif(netData){\n\t\tcontract = await new web3.eth.Contract(TicketBooking.abi,netData.address);\n\t}\n\telse{\n\t\twindow.alert(\"please change your network selection\");\n\t\t}\n\treturn contract\n}\n\nconst getWeb3 = async()=>{\n\n\tlet web3,networkId;\n\n\tif(typeof window !== 'undefined' && typeof window.ethereum !== 'undefined'){\n\n\t\tweb3 = new Web3(window.ethereum);\n\t\tconst connect = await window.ethereum.enable();\n\t\tnetworkId = await window.ethereum.networkVersion\n\t\tconsole.log(\"111\");\n\t}\n\n\telse if(typeof window !== 'undefined' && typeof window.web3 !== 'undefined'){\n\n\t\tweb3 = new Web3(window.web3.currentProvider);\n\t\tnetworkId = await web3.eth.net.getId();\n\t\tconsole.log(\"2222\")\n\t}\n\n\telse{\n\n\t\tconst provider = new Web3.providers.HttpProvider(\"https://rinkeby.infura.io/v3/0468426dce2148b480c61bc7c52be067\");\n\t\tweb3 = new Web3(provider);\n\t\tnetworkId = await web3.eth.net.getId();\n\t\tconsole.log(\"3333\")\n\t}\n\treturn{web3,networkId};\n}\n\nconst getBookedSeat = async(id)=>{\n\n\tconst contract = await getContract()\n\tconst name = await contract.methods.name().call()\n\tconst showCount = await contract.methods.getShowCount().call();\n\tlet show;\n\tlet seats=[];\n\tconsole.log(showCount)\n\tif(id<showCount && id>=0){\n\t\tshow = await contract.methods.showDetail(id).call()\n\t\tconsole.log(show)\n\t\tseats = await contract.methods.getBookedSeats(id).call()\n\t}\n\treturn {seats,show,name}\n}\n\nclass ViewShow extends Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\taccount : false,\n\t\t\tadmin : false\n\t\t}\n\t}\n\n\tstatic async getInitialProps(query){\n\t\tconst id = query.query.id\n\t\tconsole.log(\"static\")\n\t\tconst {seats,name,show} = await getBookedSeat(id)\n\t\treturn {id,seats,show,name}\n\t}\n\n\tgetAccount = async ()=>{\n\t\tlet address;\n\t\tif(typeof window && typeof window.ethereum){\n\t\t\tawait window.ethereum.enable();\n\t\t\taddress = await ethereum.selectedAddress\n\t\t\tif(address){\n\t\t\t\tthis.setState({account : true})\n\t\t\t}\n\t\t\tconsole.log(\"acc 1\",address)\n\t\t}\n\n\t\telse if(typeof window.web3.eth ){\n\t\t\twindow.web3.eth.getAccounts((err,acc)=>{\n\t\t\t\tif(err){\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(acc.length >= 1)\n\t\t\t\t\tthis.setState({account : true})\n\t\t\t\t\tconsole.log(this.state.account,acc)\n\t\t\t\t\taddress = acc;\n\t\t\t\t\tconsole.log(\"acc 1\")\n\t\t\t\t}\n\t\t\t})\t\n\t\t}\n\t\tif(address){\n\t\t\tconst {web3} = await getWeb3();\n\t\t\tif(this.props.admin === web3.utils.toChecksumAddress(address))\n\t\t\t\tthis.setState({admin : true})\n\t\t}\n\t}\n\n\tasync componentDidMount(){\n\t\tconsole.log('components')\n\t\tthis.getAccount()\n\t}\n\n\n\trender(){\n\n\t\treturn(\n\t\t\t<Layout \n\t\t\t\tname={this.props.name}\n\t\t\t\taccount={this.state.account}\n\t\t\t\tid={'Logged in'}\n\t\t\t>\n\t\t\t<GetSeat/>\n\t\t\t</Layout>\n\t\t\t)\n\t\t\t\n\t}\n}\n\nexport default ViewShow;"]},"metadata":{},"sourceType":"module"}