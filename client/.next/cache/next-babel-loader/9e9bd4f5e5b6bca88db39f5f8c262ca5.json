{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from 'react';\nimport TicketBooking from '../../build/contracts/TicketBooking.json';\nimport web3 from './web3';\nvar networkId, contract;\n\nvar getContract = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var netData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return web3.version.getNetwork(function (err, id) {\n              if (err) {\n                console.log(err);\n              } else {\n                networkId = id;\n              }\n            });\n\n          case 2:\n            netData = TicketBooking.networks[networkId];\n\n            if (!netData) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 6;\n            return new web3.eth.Contract(TicketBooking.abi, netData.address);\n\n          case 6:\n            contract = _context.sent;\n            _context.next = 10;\n            break;\n\n          case 9:\n            window.alert(\"the contract is not deployed in this network\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getContract() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\ngetContract();\nexport { contract };","map":{"version":3,"sources":["/home/pratheep/main_dir/TicketBooking/client/components/contract.js"],"names":["React","TicketBooking","web3","networkId","contract","getContract","version","getNetwork","err","id","console","log","netData","networks","eth","Contract","abi","address","window","alert"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAIC,SAAJ,EAAcC,QAAd;;AAEA,IAAMC,WAAW;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACbH,IAAI,CAACI,OAAL,CAAaC,UAAb,CAAwB,UAACC,GAAD,EAAKC,EAAL,EAAU;AACtC,kBAAGD,GAAH,EAAO;AACNE,gBAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,eAFD,MAGI;AACHL,gBAAAA,SAAS,GAAGM,EAAZ;AACA;AACD,aAPI,CADa;;AAAA;AASbG,YAAAA,OATa,GASHX,aAAa,CAACY,QAAd,CAAuBV,SAAvB,CATG;;AAAA,iBAUhBS,OAVgB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAWK,IAAIV,IAAI,CAACY,GAAL,CAASC,QAAb,CAAsBd,aAAa,CAACe,GAApC,EAAwCJ,OAAO,CAACK,OAAhD,CAXL;;AAAA;AAWlBb,YAAAA,QAXkB;AAAA;AAAA;;AAAA;AAclBc,YAAAA,MAAM,CAACC,KAAP,CAAa,8CAAb;;AAdkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXd,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAkBAA,WAAW;AAEX,SAAQD,QAAR","sourcesContent":["import React from 'react';\nimport TicketBooking from '../../build/contracts/TicketBooking.json'\nimport web3 from './web3'\n\nlet networkId,contract;\n\nconst getContract = async ()=>{\n\tawait web3.version.getNetwork((err,id)=>{\n\t\t\tif(err){\n\t\t\t\tconsole.log(err)\n\t\t\t}\n\t\t\telse{\n\t\t\t\tnetworkId = id\n\t\t\t}\n\t\t})\n\tconst netData = TicketBooking.networks[networkId]\n\tif(netData){\n\t\tcontract = await await new web3.eth.Contract(TicketBooking.abi,netData.address);\n\t}\n\telse{\n\t\twindow.alert(\"the contract is not deployed in this network\");\n\t}\n}\n\ngetContract()\n\nexport {contract}"]},"metadata":{},"sourceType":"module"}