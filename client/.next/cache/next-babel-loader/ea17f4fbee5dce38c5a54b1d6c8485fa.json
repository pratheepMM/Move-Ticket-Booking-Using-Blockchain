{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport TicketBooking from '../../build/contracts/TicketBooking.json';\n\nconst getContract = async () => {\n  const {\n    web3,\n    networkId\n  } = await getWeb3();\n  let contract;\n  const netData = TicketBooking.networks[networkId];\n\n  if (netData) {\n    contract = await new web3.eth.Contract(TicketBooking.abi, netData.address);\n  } else {\n    window.alert(\"please change your network selection\");\n  }\n\n  return contract;\n};\n\nconst getWeb3 = async () => {\n  let web3, networkId;\n\n  if (false && typeof window.ethereum !== 'undefined') {\n    web3 = new Web3(window.ethereum);\n    const connect = await window.ethereum.enable();\n    networkId = await window.ethereum.networkVersion;\n    console.log(\"111\");\n  } else if (false && typeof window.web3 !== 'undefined') {\n    web3 = new Web3(window.web3.currentProvider);\n    networkId = await web3.eth.net.getId();\n    console.log(\"2222\");\n  } else {\n    const provider = new Web3.providers.HttpProvider(\"https://rinkeby.infura.io/v3/0468426dce2148b480c61bc7c52be067\");\n    web3 = new Web3(provider);\n    networkId = await web3.eth.net.getId();\n    console.log(\"3333\");\n  }\n\n  return {\n    web3,\n    networkId\n  };\n};\n\nconst getBookedSeat = async id => {\n  const contract = await getContract();\n  const showCount = await contract.methods.getShowCount().call();\n  let show;\n  let seats = [];\n\n  if (id < showCount && id >= 0) {\n    show = await contract.methods.showDetail(id).call();\n\n    for (let i = 1; i <= show.seatsAvailable; i++) {\n      const seat = await contract.methods.getBookedSeat(id, i).call();\n      seats.push({\n        index: i,\n        address: seat\n      });\n    }\n  }\n\n  return {\n    seats\n  };\n};\n\nclass ViewShow extends Component {\n  static async getInitialProps(query) {\n    const id = query.query.id;\n    const {\n      seats\n    } = await getBookedSeat(id);\n    return {\n      id,\n      seats\n    };\n  }\n\n  render() {\n    return __jsx(\"h1\", null, this.props.seats);\n  }\n\n}\n\nexport default ViewShow;","map":{"version":3,"sources":["/home/pratheep/main_dir/TicketBooking/client/pages/viewShow.js"],"names":["React","Component","Web3","TicketBooking","getContract","web3","networkId","getWeb3","contract","netData","networks","eth","Contract","abi","address","window","alert","ethereum","connect","enable","networkVersion","console","log","currentProvider","net","getId","provider","providers","HttpProvider","getBookedSeat","id","showCount","methods","getShowCount","call","show","seats","showDetail","i","seatsAvailable","seat","push","index","ViewShow","getInitialProps","query","render","props"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport Web3 from 'web3';\nimport TicketBooking from '../../build/contracts/TicketBooking.json'\n\nconst getContract = async()=>{\n\n\tconst {web3,networkId} = await getWeb3();\n\tlet contract;\n\n\tconst netData = TicketBooking.networks[networkId]\n\n\tif(netData){\n\t\tcontract = await new web3.eth.Contract(TicketBooking.abi,netData.address);\n\t}\n\telse{\n\t\twindow.alert(\"please change your network selection\");\n\t\t}\n\treturn contract\n}\n\nconst getWeb3 = async()=>{\n\n\tlet web3,networkId;\n\n\tif(typeof window !== 'undefined' && typeof window.ethereum !== 'undefined'){\n\n\t\tweb3 = new Web3(window.ethereum);\n\t\tconst connect = await window.ethereum.enable();\n\t\tnetworkId = await window.ethereum.networkVersion\n\t\tconsole.log(\"111\");\n\t}\n\n\telse if(typeof window !== 'undefined' && typeof window.web3 !== 'undefined'){\n\n\t\tweb3 = new Web3(window.web3.currentProvider);\n\t\tnetworkId = await web3.eth.net.getId();\n\t\tconsole.log(\"2222\")\n\t}\n\n\telse{\n\n\t\tconst provider = new Web3.providers.HttpProvider(\"https://rinkeby.infura.io/v3/0468426dce2148b480c61bc7c52be067\");\n\t\tweb3 = new Web3(provider);\n\t\tnetworkId = await web3.eth.net.getId();\n\t\tconsole.log(\"3333\")\n\t}\n\treturn{web3,networkId};\n}\n\nconst getBookedSeat = async(id)=>{\n\n\tconst contract = await getContract()\n\tconst showCount = await contract.methods.getShowCount().call();\n\tlet show;\n\tlet seats=[];\n\tif(id<showCount && id>=0){\n\t\tshow = await contract.methods.showDetail(id).call()\n\n\t\tfor(let i=1;i<=show.seatsAvailable;i++){\n\t\t\tconst seat = await contract.methods.getBookedSeat(id,i).call()\n\t\t\tseats.push({\n\t\t\t\tindex : i,\n\t\t\t\taddress : seat\n\t\t\t})\n\t\t}\n\t}\n\treturn {seats}\n}\n\nclass ViewShow extends Component{\n\n\tstatic async getInitialProps(query){\n\t\tconst id = query.query.id\n\t\tconst {seats} = await getBookedSeat(id)\n\t\treturn {id,seats}\n\t}\n\n\trender(){\n\n\t\treturn(\n\t\t\t<h1>\n\t\t\t\t{this.props.seats}\n\t\t\t</h1>\n\t\t)\n\t}\n}\n\nexport default ViewShow;"]},"metadata":{},"sourceType":"module"}