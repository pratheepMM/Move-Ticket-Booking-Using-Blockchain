{"ast":null,"code":"import React from 'react';\nimport TicketBooking from '../../build/contracts/TicketBooking.json';\nimport web3 from './web3';\nlet networkId, contract;\n\nconst getContract = async () => {\n  await web3.version.getNetwork((err, id) => {\n    if (err) {\n      console.log(err);\n    } else {\n      networkId = id;\n    }\n  });\n  const netData = TicketBooking.networks[networkId];\n\n  if (netData) {\n    contract = await await new web3.eth.Contract(TicketBooking.abi, netData.address);\n  } else {\n    window.alert(\"the contract is not deployed in this network\");\n  }\n};\n\nexport { contract };","map":{"version":3,"sources":["/home/pratheep/main_dir/TicketBooking/client/components/contract.js"],"names":["React","TicketBooking","web3","networkId","contract","getContract","version","getNetwork","err","id","console","log","netData","networks","eth","Contract","abi","address","window","alert"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAIC,SAAJ,EAAcC,QAAd;;AAEA,MAAMC,WAAW,GAAG,YAAU;AAC7B,QAAMH,IAAI,CAACI,OAAL,CAAaC,UAAb,CAAwB,CAACC,GAAD,EAAKC,EAAL,KAAU;AACtC,QAAGD,GAAH,EAAO;AACNE,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,KAFD,MAGI;AACHL,MAAAA,SAAS,GAAGM,EAAZ;AACA;AACD,GAPI,CAAN;AAQA,QAAMG,OAAO,GAAGX,aAAa,CAACY,QAAd,CAAuBV,SAAvB,CAAhB;;AACA,MAAGS,OAAH,EAAW;AACVR,IAAAA,QAAQ,GAAG,MAAM,MAAM,IAAIF,IAAI,CAACY,GAAL,CAASC,QAAb,CAAsBd,aAAa,CAACe,GAApC,EAAwCJ,OAAO,CAACK,OAAhD,CAAvB;AACA,GAFD,MAGI;AACHC,IAAAA,MAAM,CAACC,KAAP,CAAa,8CAAb;AACA;AACD,CAhBD;;AAkBA,SAAQf,QAAR","sourcesContent":["import React from 'react';\nimport TicketBooking from '../../build/contracts/TicketBooking.json'\nimport web3 from './web3'\n\nlet networkId,contract;\n\nconst getContract = async ()=>{\n\tawait web3.version.getNetwork((err,id)=>{\n\t\t\tif(err){\n\t\t\t\tconsole.log(err)\n\t\t\t}\n\t\t\telse{\n\t\t\t\tnetworkId = id\n\t\t\t}\n\t\t})\n\tconst netData = TicketBooking.networks[networkId]\n\tif(netData){\n\t\tcontract = await await new web3.eth.Contract(TicketBooking.abi,netData.address);\n\t}\n\telse{\n\t\twindow.alert(\"the contract is not deployed in this network\");\n\t}\n}\n\nexport {contract}"]},"metadata":{},"sourceType":"module"}