{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from 'react';\nimport TicketBooking from '../../build/contracts/TicketBooking.json';\nimport { web3 } from './web3';\nvar networkId, contract;\n\nvar getContract = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var netid;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(typeof web3.eth.net !== 'undefined')) {\n              _context.next = 4;\n              break;\n            }\n\n            console.log(web3.version);\n            /* await web3.version.getNetwork((err,id)=>{\n            \tif(err){\n            \t\tconsole.log(err)\n            \t}\n            \telse{\n            \t\tnetworkId = id\n            \t}\n            })\n            const netData = TicketBooking.networks[networkId]\n            if(netData){\n            contract = await new web3.eth.Contract(TicketBooking.abi,netData.address);\n            }\n            else{\n            window.alert(\"the contract is not deployed in this network\");\n            } */\n\n            _context.next = 10;\n            break;\n\n          case 4:\n            _context.next = 6;\n            return web3.eth.net.getId();\n\n          case 6:\n            netid = _context.sent;\n            _context.next = 9;\n            return new web3.eth.Contract(TicketBooking.abi, netid.address);\n\n          case 9:\n            contract = _context.sent;\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getContract() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\ngetContract();\nexport { contract };","map":{"version":3,"sources":["/home/pratheep/main_dir/TicketBooking/client/components/contract.js"],"names":["React","TicketBooking","web3","networkId","contract","getContract","eth","net","console","log","version","getId","netid","Contract","abi","address"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,SAAQC,IAAR,QAAmB,QAAnB;AAEA,IAAIC,SAAJ,EAAcC,QAAd;;AAEA,IAAMC,WAAW;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAChB,OAAOH,IAAI,CAACI,GAAL,CAASC,GAAhB,KAAwB,WADR;AAAA;AAAA;AAAA;;AAElBC,YAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACQ,OAAjB;AACC;;;;;;;;;;;;;;;;AAHiB;AAAA;;AAAA;AAAA;AAAA,mBAoBER,IAAI,CAACI,GAAL,CAASC,GAAT,CAAaI,KAAb,EApBF;;AAAA;AAoBZC,YAAAA,KApBY;AAAA;AAAA,mBAqBD,IAAIV,IAAI,CAACI,GAAL,CAASO,QAAb,CAAsBZ,aAAa,CAACa,GAApC,EAAwCF,KAAK,CAACG,OAA9C,CArBC;;AAAA;AAqBlBX,YAAAA,QArBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXC,WAAW;AAAA;AAAA;AAAA,GAAjB;;AA0BAA,WAAW;AAEX,SAAQD,QAAR","sourcesContent":["import React from 'react';\nimport TicketBooking from '../../build/contracts/TicketBooking.json'\nimport {web3} from './web3'\n\nlet networkId,contract;\n\nconst getContract = async ()=>{\n\tif(typeof web3.eth.net !== 'undefined'){\n\t\tconsole.log(web3.version)\n\t\t /* await web3.version.getNetwork((err,id)=>{\n\t\t\t\tif(err){\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tnetworkId = id\n\t\t\t\t}\n\t\t\t})\n\t\tconst netData = TicketBooking.networks[networkId]\n\t\tif(netData){\n\t\t\tcontract = await new web3.eth.Contract(TicketBooking.abi,netData.address);\n\t\t}\n\t\telse{\n\t\t\twindow.alert(\"the contract is not deployed in this network\");\n\t\t} */ \n\t}\n\telse{\n\t\tconst netid = await web3.eth.net.getId()\n\t\tcontract = await new web3.eth.Contract(TicketBooking.abi,netid.address);\n\t}\n\n}\n\ngetContract()\n\nexport {contract}"]},"metadata":{},"sourceType":"module"}