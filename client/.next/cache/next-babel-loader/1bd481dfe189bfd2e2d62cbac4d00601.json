{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Button, Icon, Grid, Confirm } from 'semantic-ui-react';\n\nvar GetSeat = /*#__PURE__*/function (_Component) {\n  _inherits(GetSeat, _Component);\n\n  var _super = _createSuper(GetSeat);\n\n  function GetSeat(props) {\n    var _this;\n\n    _classCallCheck(this, GetSeat);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"openConfirm\", function (event) {\n      console.log(event.target);\n      event.preventDefault();\n      /* if(Color=='grey'){\n      \t//this.setState({open : true})\n      \tconsole.log('grey',idS)\n      }\n      else{\n      \twindow.alert(\"Seat have been booked already !\")\n      } */\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"ticket\", function () {\n      var res = [];\n\n      for (var i = 1; i <= _this.props.show.seatsAvailable; i++) {\n        var Color = _this.props.seats.includes(i) ? 'red' : 'grey';\n        res.push(__jsx(Button, {\n          size: \"tiny\",\n          onClick: _this.openConfirm,\n          circular: true,\n          key: i,\n          color: Color\n        }, __jsx(Icon, {\n          name: \"ticket\"\n        }), i));\n      }\n\n      return res;\n    });\n\n    _this.state = {\n      open: false,\n      id: null\n    };\n    return _this;\n  }\n\n  _createClass(GetSeat, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Grid.Row, null, __jsx(Grid.Column, null, this.ticket(), __jsx(Confirm, {\n        open: this.state.open,\n        onCancel: function onCancel() {\n          return _this2.setState({\n            open: false\n          });\n        },\n        onConfirm: function onConfirm() {\n          return _this2.props.buyTicket(_this2.props.showId, _this2.state.id);\n        }\n      })));\n    }\n  }]);\n\n  return GetSeat;\n}(Component);\n\nexport default GetSeat;","map":{"version":3,"sources":["/home/pratheep/main_dir/TicketBooking/client/components/getSeat.js"],"names":["React","Component","Button","Icon","Grid","Confirm","GetSeat","props","event","console","log","target","preventDefault","res","i","show","seatsAvailable","Color","seats","includes","push","openConfirm","state","open","id","ticket","setState","buyTicket","showId"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,MAAR,EAAeC,IAAf,EAAoBC,IAApB,EAAyBC,OAAzB,QAAuC,mBAAvC;;IAEMC,O;;;;;AAEL,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,kEAQJ,UAACC,KAAD,EAAS;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACAH,MAAAA,KAAK,CAACI,cAAN;AACA;;;;;;;AAOA,KAlBiB;;AAAA,6DAoBT,YAAI;AACZ,UAAIC,GAAG,GAAC,EAAR;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,IAAE,MAAKP,KAAL,CAAWQ,IAAX,CAAgBC,cAA/B,EAA8CF,CAAC,EAA/C,EAAkD;AACjD,YAAIG,KAAK,GAAG,MAAKV,KAAL,CAAWW,KAAX,CAAiBC,QAAjB,CAA0BL,CAA1B,IAA6B,KAA7B,GAAmC,MAA/C;AACCD,QAAAA,GAAG,CAACO,IAAJ,CACC,MAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,MAAb;AAAoB,UAAA,OAAO,EAAE,MAAKC,WAAlC;AAA+C,UAAA,QAAQ,MAAvD;AAAwD,UAAA,GAAG,EAAEP,CAA7D;AAAgE,UAAA,KAAK,EAAEG;AAAvE,WACA,MAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX,UADA,EAECH,CAFD,CADD;AAMD;;AACD,aAAOD,GAAP;AACA,KAhCiB;;AAEjB,UAAKS,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAG,KADK;AAEZC,MAAAA,EAAE,EAAG;AAFO,KAAb;AAFiB;AAMjB;;;;6BA4BO;AAAA;;AACP,aACA,MAAC,IAAD,CAAM,GAAN,QACC,MAAC,IAAD,CAAM,MAAN,QACE,KAAKC,MAAL,EADF,EAEC,MAAC,OAAD;AAAS,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,IAA1B;AACC,QAAA,QAAQ,EAAE;AAAA,iBAAI,MAAI,CAACG,QAAL,CAAc;AAACH,YAAAA,IAAI,EAAC;AAAN,WAAd,CAAJ;AAAA,SADX;AAEC,QAAA,SAAS,EAAE;AAAA,iBAAI,MAAI,CAAChB,KAAL,CAAWoB,SAAX,CAAqB,MAAI,CAACpB,KAAL,CAAWqB,MAAhC,EAAuC,MAAI,CAACN,KAAL,CAAWE,EAAlD,CAAJ;AAAA;AAFZ,QAFD,CADD,CADA;AAWA;;;;EAhDoBvB,S;;AAmDtB,eAAeK,OAAf","sourcesContent":["import React,{Component} from 'react';\nimport {Button,Icon,Grid,Confirm} from 'semantic-ui-react'\n\nclass GetSeat extends Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\topen : false,\n\t\t\tid : null\n\t\t}\n\t}\n\n\topenConfirm = (event)=>{\n\t\tconsole.log(event.target)\n\t\tevent.preventDefault()\n\t\t/* if(Color=='grey'){\n\t\t\t//this.setState({open : true})\n\t\t\tconsole.log('grey',idS)\n\t\t}\n\t\telse{\n\t\t\twindow.alert(\"Seat have been booked already !\")\n\t\t} */\n\t}\n\n\tticket = ()=>{\n\t\tvar res=[]\n\t\tfor(let i=1;i<=this.props.show.seatsAvailable;i++){\n\t\t\tlet Color = this.props.seats.includes(i)?'red':'grey'\n\t \t\tres.push(\n\t\t\t\t\t<Button size='tiny' onClick={this.openConfirm} circular key={i} color={Color}>\n\t\t\t\t\t<Icon name='ticket'/>\n\t\t\t\t\t{i}\n\t\t\t\t\t</Button>\n\t\t\t)\n\t\t}\n\t\treturn res;\n\t}\n\n\trender(){\n\t\treturn(\n\t\t<Grid.Row>\n\t\t\t<Grid.Column>\n\t\t\t\t{this.ticket()}\n\t\t\t\t<Confirm open={this.state.open}\n\t\t\t\t onCancel={()=>this.setState({open:false})}\n\t\t\t\t onConfirm={()=>this.props.buyTicket(this.props.showId,this.state.id)}\n\t\t\t\t/>\n\t\t\t</Grid.Column>\n\t\t</Grid.Row>\n\t\t)\n\t}\n}\n\nexport default GetSeat;"]},"metadata":{},"sourceType":"module"}