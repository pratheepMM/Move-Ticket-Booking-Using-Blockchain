{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../components/layout';\nimport Web3 from 'web3';\n\nconst getContract = async () => {\n  const web3 = getWeb3();\n  let contract;\n  console.log(web3.Web3);\n  /* if(typeof web3.eth !== 'undefined'){\n  \t\tconst netId = await web3.eth.net.getId();\n  \tcontract = await new web3.eth.Contract(TicketBooking.abi,TicketBooking.networks[netId].address);\n  \tconsole.log(\"first\",showCount)\n  }\n  else{\n  \t\tconsole.log(\"second\")\n  \tawait web3.version.getNetwork((err,id)=>{\n  \t\t\tif(err){\n  \t\t\t\tconsole.log(err)\n  \t\t\t}\n  \t\t\telse{\n  \t\t\t\tnetworkId = id\n  \t\t\t}\n  \t\t})\n  \t\tconst netData = TicketBooking.networks[networkId]\n  \tconsole.log('netdata',netData)\n  \t\tif(netData){\n  \t\tcontract = await new web3.eth.Contract(TicketBooking.abi,netData.address);\n  \t}\n  \telse{\n  \t\twindow.alert(\"the contract is not deployed in this network\");\n  \t} \n  } */\n\n  return contract;\n};\n\nconst getWeb3 = async () => {\n  let web3;\n\n  if (false && typeof window.ethereum !== 'undefined') {\n    web3 = new Web3(window.ethereum);\n    const connect = await window.ethereum.enable();\n    console.log(\"111\");\n  } else if (false && typeof window.web3 !== 'undefined') {\n    web3 = new Web3(window.web3.currentProvider);\n    console.log(\"2222\");\n  } else {\n    const provider = new Web3.providers.HttpProvider(\"https://rinkeby.infura.io/v3/0468426dce2148b480c61bc7c52be067\");\n    web3 = new Web3(provider);\n    console.log(\"3333\");\n  }\n\n  return web3;\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getAccount\", async () => {\n      web3.eth.getAccounts((err, acc) => {\n        if (err) {\n          console.log(err);\n        } else {\n          if (acc.length >= 1) this.setState({\n            account: true\n          });\n          console.log(this.state.account, acc);\n        }\n      });\n    });\n\n    this.state = {\n      account: false,\n      networkId: 0\n    };\n  }\n\n  static async getInitialProps() {\n    const contract = await getContract();\n    const name = await contract;\n    return {\n      name\n    };\n  }\n\n  async componentDidMount() {\n    this.getAccount();\n    console.log(\"init\");\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\n    }), __jsx(Layout, {\n      account: this.state.account,\n      name: this.props.name\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/pratheep/main_dir/TicketBooking/client/pages/index.js"],"names":["React","Component","Layout","Web3","getContract","web3","getWeb3","contract","console","log","window","ethereum","connect","enable","currentProvider","provider","providers","HttpProvider","App","constructor","props","eth","getAccounts","err","acc","length","setState","account","state","networkId","getInitialProps","name","componentDidMount","getAccount","render"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAGA,MAAMC,WAAW,GAAG,YAAS;AAE5B,QAAMC,IAAI,GAAGC,OAAO,EAApB;AACA,MAAIC,QAAJ;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACF,IAAjB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,SAAOI,QAAP;AACA,CApCD;;AAsCA,MAAMD,OAAO,GAAG,YAAS;AAExB,MAAID,IAAJ;;AAEA,MAAG,SAAiC,OAAOK,MAAM,CAACC,QAAd,KAA2B,WAA/D,EAA2E;AAE1EN,IAAAA,IAAI,GAAG,IAAIF,IAAJ,CAASO,MAAM,CAACC,QAAhB,CAAP;AACA,UAAMC,OAAO,GAAG,MAAMF,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAAtB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,GALD,MAOK,IAAG,SAAiC,OAAOC,MAAM,CAACL,IAAd,KAAuB,WAA3D,EAAuE;AAE3EA,IAAAA,IAAI,GAAG,IAAIF,IAAJ,CAASO,MAAM,CAACL,IAAP,CAAYS,eAArB,CAAP;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,GAJI,MAMD;AAEH,UAAMM,QAAQ,GAAG,IAAIZ,IAAI,CAACa,SAAL,CAAeC,YAAnB,CAAgC,+DAAhC,CAAjB;AACAZ,IAAAA,IAAI,GAAG,IAAIF,IAAJ,CAASY,QAAT,CAAP;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA;;AACD,SAAOJ,IAAP;AACA,CAxBD;;AA0BA,MAAMa,GAAN,SAAkBjB,SAAlB,CAA2B;AAE1BkB,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;;AADiB,wCAQL,YAAU;AACtBf,MAAAA,IAAI,CAACgB,GAAL,CAASC,WAAT,CAAqB,CAACC,GAAD,EAAKC,GAAL,KAAW;AAC/B,YAAGD,GAAH,EAAO;AACNf,UAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACA,SAFD,MAGI;AACH,cAAGC,GAAG,CAACC,MAAJ,IAAc,CAAjB,EACA,KAAKC,QAAL,CAAc;AAACC,YAAAA,OAAO,EAAG;AAAX,WAAd;AACAnB,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKmB,KAAL,CAAWD,OAAvB,EAA+BH,GAA/B;AACA;AACD,OATD;AAWA,KApBiB;;AAEjB,SAAKI,KAAL,GAAa;AACZD,MAAAA,OAAO,EAAG,KADE;AAEZE,MAAAA,SAAS,EAAG;AAFA,KAAb;AAIA;;AAgBD,eAAaC,eAAb,GAA8B;AAC7B,UAAMvB,QAAQ,GAAG,MAAMH,WAAW,EAAlC;AACA,UAAM2B,IAAI,GAAG,MAAMxB,QAAnB;AACA,WAAO;AAACwB,MAAAA;AAAD,KAAP;AACA;;AAED,QAAMC,iBAAN,GAAyB;AACxB,SAAKC,UAAL;AACAzB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA;;AAEDyB,EAAAA,MAAM,GAAE;AAEP,WACC,mBACC;AAAM,MAAA,GAAG,EAAC,YAAV;AAAuB,MAAA,IAAI,EAAC;AAA5B,MADD,EAEC,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWD,OAA5B;AACC,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWW;AADlB,MAFD,CADD;AAQA;;AA7CyB;;AAgD3B,eAAeb,GAAf","sourcesContent":["import React,{Component} from 'react';\nimport Layout from '../components/layout';\nimport Web3 from 'web3';\n\n\nconst getContract = async()=>{\n\n\tconst web3 = getWeb3();\n\tlet contract;\n\n\tconsole.log(web3.Web3)\n\n\t/* if(typeof web3.eth !== 'undefined'){\n\n\t\tconst netId = await web3.eth.net.getId();\n\t\tcontract = await new web3.eth.Contract(TicketBooking.abi,TicketBooking.networks[netId].address);\n\t\tconsole.log(\"first\",showCount)\n\t}\n\telse{\n\n\t\tconsole.log(\"second\")\n\t\tawait web3.version.getNetwork((err,id)=>{\n\t\t\t\tif(err){\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tnetworkId = id\n\t\t\t\t}\n\t\t\t})\n\n\t\tconst netData = TicketBooking.networks[networkId]\n\t\tconsole.log('netdata',netData)\n\n\t\tif(netData){\n\t\t\tcontract = await new web3.eth.Contract(TicketBooking.abi,netData.address);\n\t\t}\n\t\telse{\n\t\t\twindow.alert(\"the contract is not deployed in this network\");\n\t\t} \n\t} */\n\treturn contract\n}\n\nconst getWeb3 = async()=>{\n\n\tlet web3;\n\n\tif(typeof window !== 'undefined' && typeof window.ethereum !== 'undefined'){\n\n\t\tweb3 = new Web3(window.ethereum);\n\t\tconst connect = await window.ethereum.enable();\n\t\tconsole.log(\"111\");\n\t}\n\n\telse if(typeof window !== 'undefined' && typeof window.web3 !== 'undefined'){\n\n\t\tweb3 = new Web3(window.web3.currentProvider);\n\t\tconsole.log(\"2222\")\n\t}\n\n\telse{\n\n\t\tconst provider = new Web3.providers.HttpProvider(\"https://rinkeby.infura.io/v3/0468426dce2148b480c61bc7c52be067\");\n\t\tweb3 = new Web3(provider);\n\t\tconsole.log(\"3333\")\n\t}\n\treturn(web3);\n}\n\nclass App extends Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\taccount : false,\n\t\t\tnetworkId : 0\n\t\t}\n\t}\n\n\tgetAccount = async ()=>{\n\t\tweb3.eth.getAccounts((err,acc)=>{\n\t\t\tif(err){\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(acc.length >= 1)\n\t\t\t\tthis.setState({account : true})\n\t\t\t\tconsole.log(this.state.account,acc)\n\t\t\t}\n\t\t})\n\t\t\n\t}\n\n\tstatic async getInitialProps(){\n\t\tconst contract = await getContract();\n\t\tconst name = await contract\n\t\treturn {name}\n\t}\n\n\tasync componentDidMount(){\n\t\tthis.getAccount();\n\t\tconsole.log(\"init\")\n\t}\n\n\trender(){\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\" />\n\t\t\t\t<Layout account={this.state.account}\n\t\t\t\t\tname={this.props.name}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}