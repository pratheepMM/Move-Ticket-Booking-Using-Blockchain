{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Container, Header, Grid, Dimmer, Loader, Image, Icon } from 'semantic-ui-react';\nimport { getAccount } from '../../components/getAccount';\nimport { getContract } from '../../components/getContract';\nimport Layout from '../../components/layout';\nimport { getWeb3 } from '../../components/getWeb3';\nimport GetSeat from '../../components/getSeat';\nimport Head from 'next/head';\nimport Router from '../../routes';\nimport { getBookedSeat } from '../../components/getBookedSeat';\n\nclass ViewShow extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"buyTicket\", async (index, seatNo, amount) => {\n      if (this.state.account) {\n        const {\n          contract\n        } = await getContract();\n        const {\n          address\n        } = await getAccount(this.props.admin);\n        this.setState({\n          loading: true\n        });\n\n        try {\n          await contract.methods.bookSeat(index, seatNo).send({\n            from: address,\n            value: amount\n          });\n          window.alert(\"Your Ticket has been Booked\");\n          Router.pushRoute(\"view_show\", {\n            id: this.props.id\n          });\n        } catch (e) {\n          window.alert(e.message);\n        }\n\n        this.setState({\n          loading: false\n        });\n      } else {\n        window.alert(\"No Account Found\");\n      }\n    });\n\n    this.state = {\n      account: false,\n      admin: false,\n      loading: true,\n      amountInEther: 0\n    };\n  }\n\n  static async getInitialProps(query) {\n    const id = query.query.id;\n    const {\n      seats,\n      name,\n      show\n    } = await getBookedSeat(id);\n    return {\n      id,\n      seats,\n      show,\n      name\n    };\n  }\n\n  async componentDidMount() {\n    console.log('components');\n    const {\n      isAdmin,\n      isAccount\n    } = await getAccount();\n    const {\n      web3\n    } = await getWeb3();\n    this.setState({\n      account: isAccount,\n      admin: isAdmin,\n      loading: false,\n      amountInEther: web3.utils.fromWei(this.props.show.amount, \"ether\")\n    });\n  }\n\n  render() {\n    if (!this.state.loading) {\n      return __jsx(Layout, {\n        name: this.props.name,\n        account: this.state.account,\n        id: 'Logged in'\n      }, __jsx(Grid.Row, {\n        columns: 2\n      }, __jsx(Grid.Column, null, __jsx(Image, {\n        src: `https://gateway.ipfs.io/ipfs/${this.props.show.image}`\n      })), __jsx(Grid.Column, null, __jsx(Header, {\n        size: \"huge\"\n      }, this.props.show.showName), __jsx(Header, {\n        size: \"medium\"\n      }, `From : ${this.props.show.fromTime}`), __jsx(Header, {\n        size: \"medium\"\n      }, `To : ${this.props.show.toTime}`), __jsx(Header, {\n        size: \"medium\"\n      }, `Date : ${this.props.show.date}`), __jsx(Header, {\n        size: \"medium\"\n      }, \"Amount : \", __jsx(Icon, {\n        name: \"ethereum\"\n      }), `${this.state.amountInEther}`))), __jsx(GetSeat, {\n        show: this.props.show,\n        seats: this.props.seats,\n        buyTicket: this.buyTicket,\n        showId: this.props.id,\n        amount: this.props.show.amount,\n        amountInEther: this.state.amountInEther,\n        account: this.state.account\n      }));\n    } else {\n      return __jsx(Container, null, __jsx(Head, null, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\n      })), __jsx(Dimmer, {\n        active: true\n      }, __jsx(Loader, {\n        size: \"massive\"\n      }, \"Loading\")));\n    }\n  }\n\n}\n\nexport default ViewShow;","map":{"version":3,"sources":["/home/pratheep/Work_Dir/main_dir/TicketBooking/client/pages/view-show/viewShow.js"],"names":["React","Component","Container","Header","Grid","Dimmer","Loader","Image","Icon","getAccount","getContract","Layout","getWeb3","GetSeat","Head","Router","getBookedSeat","ViewShow","constructor","props","index","seatNo","amount","state","account","contract","address","admin","setState","loading","methods","bookSeat","send","from","value","window","alert","pushRoute","id","e","message","amountInEther","getInitialProps","query","seats","name","show","componentDidMount","console","log","isAdmin","isAccount","web3","utils","fromWei","render","image","showName","fromTime","toTime","date","buyTicket"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Container,Header,Grid,Dimmer,Loader,Image,Icon} from 'semantic-ui-react'\nimport {getAccount} from '../../components/getAccount';\nimport {getContract} from '../../components/getContract';\nimport Layout from '../../components/layout'\nimport {getWeb3} from '../../components/getWeb3'\nimport GetSeat from '../../components/getSeat'\nimport Head from 'next/head';\nimport Router from '../../routes';\nimport {getBookedSeat} from '../../components/getBookedSeat';\n\nclass ViewShow extends Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\taccount : false,\n\t\t\tadmin : false,\n\t\t\tloading : true,\n\t\t\tamountInEther : 0\n\t\t}\n\t}\n\n\tstatic async getInitialProps(query){\n\t\tconst id = query.query.id\n\t\tconst {seats,name,show} = await getBookedSeat(id)\n\t\treturn {id,seats,show,name}\n\t}\n\n\tasync componentDidMount(){\n\t\tconsole.log('components')\n\t\tconst {isAdmin,isAccount} = await getAccount()\n\t\tconst {web3} = await getWeb3();\n\t\tthis.setState({\n\t\t\taccount : isAccount,\n\t\t\tadmin : isAdmin,\n\t\t\tloading : false,\n\t\t\tamountInEther : web3.utils.fromWei(this.props.show.amount,\"ether\")\n\t\t})\n\t}\n\n\tbuyTicket = async(index,seatNo,amount)=>{\n\t\tif(this.state.account){\n\t\t\tconst {contract} = await getContract();\n\t\t\tconst {address} = await getAccount(this.props.admin)\n\t\t\tthis.setState({loading : true})\n\t\t\ttry{\n\t\t\t\tawait contract.methods.bookSeat(index,seatNo).send({from : address,value : amount});\n\t\t\t\twindow.alert(\"Your Ticket has been Booked\")\n\t\t\t\tRouter.pushRoute(\"view_show\",{id : this.props.id})\n\t\t\t}catch(e){\n\t\t\t\twindow.alert(e.message)\n\t\t\t}\n\t\t\tthis.setState({loading : false})\n\t\t}\n\t\telse{\n\t\t\twindow.alert(\"No Account Found\")\n\t\t}\n\t}\n\n\n\trender(){\n\n\t\tif(!this.state.loading){\n\t\t\treturn(\n\t\t\t\t<Layout \n\t\t\t\t\tname={this.props.name}\n\t\t\t\t\taccount={this.state.account}\n\t\t\t\t\tid={'Logged in'}\n\t\t\t\t>\n\t\t\t\t<Grid.Row columns={2}>\n\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t<Image src={`https://gateway.ipfs.io/ipfs/${this.props.show.image}`}/>\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t<Header size='huge'>{this.props.show.showName}</Header>\n\t\t\t\t\t\t<Header size='medium'>{`From : ${this.props.show.fromTime}`}</Header>\n\t\t\t\t\t\t<Header size='medium'>{`To : ${this.props.show.toTime}`}</Header>\n\t\t\t\t\t\t<Header size='medium'>{`Date : ${this.props.show.date}`}</Header>\n\t\t\t\t\t\t<Header size=\"medium\">{\"Amount : \"}<Icon name=\"ethereum\"/>{`${this.state.amountInEther}`}</Header>\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid.Row>\n\t\t\t\t<GetSeat show={this.props.show}\n\t\t\t\t\tseats={this.props.seats}\n\t\t\t\t\tbuyTicket={this.buyTicket}\n\t\t\t\t\tshowId={this.props.id}\n\t\t\t\t\tamount={this.props.show.amount}\n\t\t\t\t\tamountInEther={this.state.amountInEther}\n\t\t\t\t\taccount={this.state.account}\n\t\t\t\t/>\n\t\t\t\t</Layout>\n\t\t\t)\n\t\t}\n\t\telse{\n\t\t\treturn(\n\t\t\t\t<Container>\n\t\t\t\t\t<Head>\n\t\t\t\t\t\t<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\" />\n\t\t\t\t\t</Head>\n\t\t\t\t\t<Dimmer active>\n\t\t\t\t\t\t<Loader size='massive'>Loading</Loader>\n\t\t\t\t\t</Dimmer>\n\t\t\t\t</Container>\n\t\t\t)\n\t\t}\n\t}\n}\n\nexport default ViewShow;"]},"metadata":{},"sourceType":"module"}